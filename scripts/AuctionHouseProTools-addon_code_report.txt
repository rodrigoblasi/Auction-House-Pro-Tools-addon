=== Auction House Pro Tools Addon Source Code Report ===

Code report generated at: 22/10/2024 - 13:45:44

DISCLAIMER: This report contains the source code of the Auction House Pro Tools addon for World of Warcraft.
Each section below corresponds to a specific file, and the content is organized by filename.
Files and folders listed under exclusions are not included in this report.
Use this information to contextualize about the updated status project code
Please disregard any previous versions of the addon code that were in memory.
From now on, this is the definitive code we will work with until the next update. We will continue our progress based solely on this version of the code.
Please review the code to understand the current state of the addon.

-----------------------------------------------

=== Updated Addon components informations ===
Here the updated addon details, with all components and versions

-- Addon --
Auction House Pro Tools - Version: 0.0.1

-- Components --
Modules:
Core - Version: 0.0.1 - Type: module
Sales Summary Extended - Version: 0.0.1 - Type: module
Undercut Wars Dashboard - Version: 0.0.1 - Type: module

Snippets:
Hello World - Version: 0.0.1 - Type: snippet
Log - Version: 0.0.1 - Type: snippet

Handlers: No components found.
-----------------------------------------------

=== Updated directory structure ===
├── AuctionHouseProTools.toc
├── LICENSE
├── README.md
├── handlers
├── modules
│   ├── core
│   │   ├── core_init.lua
│   │   └── core_ui.lua
│   ├── sales_summary_extended
│   │   └── sales_summary_extended_init.lua
│   └── undercut_wars_dashboard
│       └── undercut_wars_dashboard_init.lua
└── snippets
    ├── hello_world.lua
    └── log.lua
=== File: C:\Program Files (x86)\World of Warcraft\_retail_\Interface\AddOns\AuctionHouseProTools\AuctionHouseProTools.toc ===

## Interface: 110002
## Title: Auction House Pro Tools
## Author: Blasi
## Version: 0.0.1
## SavedVariables: ModuleSettings, GlobalAudit
# Module: Core
modules\core\core_init.lua
# modules\core\core_ui.lua

# Snippets
#snippets\auctionhouse_actions.lua
#snippets\is_commodity.lua
snippets\log.lua
snippets\hello_world.lua
#snippets\component_global_availability.lua


# Handlers
# handlers\global_audit.lua

# Modules
# Sales Summary Extended
#modules\sales_summary_extended\sales_summary_extended_init.lua

# Undercut Wars Dashboard
#modules\undercut_wars_dashboard\undercut_wars_dashboard_init.lua
# modules\undercut_wars_dashboard\undercut_wars_dashboard_functions.lua
# modules\undercut_wars_dashboard\undercut_wars_dashboard_ui.lua
=== End of C:\Program Files (x86)\World of Warcraft\_retail_\Interface\AddOns\AuctionHouseProTools\AuctionHouseProTools.toc ===

=== File: C:\Program Files (x86)\World of Warcraft\_retail_\Interface\AddOns\AuctionHouseProTools\modules\core\core_init.lua ===

-- DEFAULT HEADER, dont DELETE!
-- FILE PATH: Modules/core/core_init.lua
-- MODULE SHORT DESCRIPTION: Adjusted component check logic for different component types
-- MODULE METADATA
local componentName = "core"
local componentExternalName = "Core"
local componentVersion = "0.0.1"
local componentType = "module"
-- Addon METADATA
--local addonVersion = "0.dsadssa"
--local addonBranch = "devessdadpment"
--local latestDeploy = "sss"
--
-- addon metadata global vars
_G["addonName"] = "AuctionHouseProTools"
_G["addonExternalName"] = "Auction House Pro Tools"
_G["addonVersion"] = "0.0.1"
_G["addonBranch"] = "development"
_G["latestDeploy"] = "22.10.2024 - 13:45:44"
-- dont delete this addon identification too!!
-- Registro dos metadados deste componente globalmente em addonComponents
_G["addonComponents"] = _G["addonComponents"] or {}

if not _G["addonComponents"][componentName] then
    _G["addonComponents"][componentName] = {
        Metadata = {
            componentName = componentName,
            componentExternalName = componentExternalName,
            componentVersion = componentVersion,
            componentType = componentType
        },
        functions = {}
    }
else
    DEFAULT_CHAT_FRAME:AddMessage("|cFFFF0000[WARNING]: Metadados do componente '" .. componentExternalName .. "' já estavam registrados. Substituição não necessária.|r")
end
--
-- END OF DEFAULT HEADER, dont DELETE THE CODE ABOVE!
-- START HERE THIS COMPONENT SPECIFIC DEVELOPMENT, don't delete the code above.

-- Função para listar todos os componentes registrados
-- essa função deve virar um novo snippet em breve
local function ListAllComponents()
    -- Listar módulos
    _G["addonComponents"]["Log"].functions.message(componentExternalName, "INFO", "-- MODULOS --")
    for key, value in pairs(_G["addonComponents"]) do
        if value.Metadata and value.Metadata.componentType == "module" then
            _G["addonComponents"]["Log"].functions.message(componentExternalName, "INFO", "Módulo: " .. value.Metadata.componentExternalName)
            _G["addonComponents"]["Log"].functions.message(componentExternalName, "DEBUG", "componentName: " .. value.Metadata.componentName)
            _G["addonComponents"]["Log"].functions.message(componentExternalName, "DEBUG", "componentExternalName: " .. value.Metadata.componentExternalName)
            _G["addonComponents"]["Log"].functions.message(componentExternalName, "DEBUG", "componentVersion: " .. value.Metadata.componentVersion)
            if value.functions and next(value.functions) then
                _G["addonComponents"]["Log"].functions.message(componentExternalName, "DEBUG", "Funções disponíveis:")
                for functionName, _ in pairs(value.functions) do
                    _G["addonComponents"]["Log"].functions.message(componentExternalName, "DEBUG", "  - " .. functionName)
                end
            end
        end
    end

    -- Listar snippets
    _G["addonComponents"]["Log"].functions.message(componentExternalName, "INFO", "-- SNIPPETS --")
    for key, value in pairs(_G["addonComponents"]) do
        if value.Metadata and value.Metadata.componentType == "snippet" then
            _G["addonComponents"]["Log"].functions.message(componentExternalName, "INFO", "Snippet: " .. value.Metadata.componentExternalName)
            _G["addonComponents"]["Log"].functions.message(componentExternalName, "DEBUG", "componentName: " .. value.Metadata.componentName)
            _G["addonComponents"]["Log"].functions.message(componentExternalName, "DEBUG", "componentExternalName: " .. value.Metadata.componentExternalName)
            _G["addonComponents"]["Log"].functions.message(componentExternalName, "DEBUG", "componentVersion: " .. value.Metadata.componentVersion)
            if value.functions and next(value.functions) then
                _G["addonComponents"]["Log"].functions.message(componentExternalName, "DEBUG", "Funções disponíveis:")
                for functionName, _ in pairs(value.functions) do
                    _G["addonComponents"]["Log"].functions.message(componentExternalName, "DEBUG", "  - " .. functionName)
                end
            end
        end
    end

    -- Listar handlers
    _G["addonComponents"]["Log"].functions.message(componentExternalName, "INFO", "-- HANDLERS --")
    for key, value in pairs(_G["addonComponents"]) do
        if value.Metadata and value.Metadata.componentType == "handler" then
            _G["addonComponents"]["Log"].functions.message(componentExternalName, "INFO", "Handler: " .. value.Metadata.componentExternalName)
            _G["addonComponents"]["Log"].functions.message(componentExternalName, "DEBUG", "componentName: " .. value.Metadata.componentName)
            _G["addonComponents"]["Log"].functions.message(componentExternalName, "DEBUG", "componentExternalName: " .. value.Metadata.componentExternalName)
            _G["addonComponents"]["Log"].functions.message(componentExternalName, "DEBUG", "componentVersion: " .. value.Metadata.componentVersion)
            if value.functions and next(value.functions) then
                _G["addonComponents"]["Log"].functions.message(componentExternalName, "DEBUG", "Funções disponíveis:")
                for functionName, _ in pairs(value.functions) do
                    _G["addonComponents"]["Log"].functions.message(componentExternalName, "DEBUG", "  - " .. functionName)
                end
            end
        end
    end
end

-- Evento ADDON_LOADED para iniciar a checagem dos componentes
local frame = CreateFrame("Frame")
frame:RegisterEvent("ADDON_LOADED")
frame:SetScript("OnEvent", function(self, event, loadedAddonName)
    if (loadedAddonName == addonName or loadedAddonName == "AuctionHouseProTools") then
        -- a verificação da função global de log deve ocorrer aqui, de forma "silenciosa" e caso ela não esteja disponivel devemos ter uma mensagem de erro usando a console do jogo, em vermelho e a execução do addon deve parar.
        if not _G["addonComponents"]["Log"] or not _G["addonComponents"]["Log"].functions or not _G["addonComponents"]["Log"].functions.message then
            DEFAULT_CHAT_FRAME:AddMessage("|cFFFF0000[CRITICAL ERROR]: Função de log 'Log.message' não encontrada. Parando a execução do addon.|r")
            return -- Parar a execução do addon
        end
        
        -- Listar todos os componentes disponíveis do addon
        ListAllComponents()
        _G["addonComponents"]["hello_world"].functions.hello_world(componentExternalName, componentVersion)
    end
end)

=== End of C:\Program Files (x86)\World of Warcraft\_retail_\Interface\AddOns\AuctionHouseProTools\modules\core\core_init.lua ===

=== File: C:\Program Files (x86)\World of Warcraft\_retail_\Interface\AddOns\AuctionHouseProTools\modules\core\core_ui.lua ===

local coreUIFrame = CreateFrame("Frame", "CoreUIFrame", UIParent, "BasicFrameTemplateWithInset")
coreUIFrame:SetSize(300, 200)
coreUIFrame:SetPoint("CENTER")
coreUIFrame:Hide()
=== End of C:\Program Files (x86)\World of Warcraft\_retail_\Interface\AddOns\AuctionHouseProTools\modules\core\core_ui.lua ===

=== File: C:\Program Files (x86)\World of Warcraft\_retail_\Interface\AddOns\AuctionHouseProTools\modules\sales_summary_extended\sales_summary_extended_init.lua ===

-- DEFAULT HEADER, dont DELETE!
-- FILE PATH: Modules/SalesSummaryExtended/init.lua
-- MODULE SHORT DESCRIPTION: 
-- Module METADATA
local componentName = "SalesSummaryExtended"
local componentExternalName = "Sales Summary Extended"
local componentVersion = "0.0.1"
local componentType = "module"
-- Função para registrar os metadados globalmente
if not _G[componentName .. "_Metadata"] then
    _G[componentName .. "_Metadata"] = {
        componentExternalName = componentExternalName,
        componentVersion = componentVersion,
        componentType = componentType
    }
else
    DEFAULT_CHAT_FRAME:AddMessage("|cFFFF0000[WARNING]: Metadados do componente '" .. componentExternalName .. "' já estavam registrados. Substituição não necessária.|r")
end
--
-- END OF DEFAULT HEADER, dont DELETE THE CODE ABOVE!
-- START HERE THIS COMPONENT SPECIFIC DEVELOPMENT, don't delete the code above.
=== End of C:\Program Files (x86)\World of Warcraft\_retail_\Interface\AddOns\AuctionHouseProTools\modules\sales_summary_extended\sales_summary_extended_init.lua ===

=== File: C:\Program Files (x86)\World of Warcraft\_retail_\Interface\AddOns\AuctionHouseProTools\modules\undercut_wars_dashboard\undercut_wars_dashboard_init.lua ===

-- DEFAULT HEADER, dont DELETE!
--F ILE PATH: Modules/undercut_wars_dashboard/undercut_wars_dashboard_init.lua
-- MODULE SHORT DESCRIPTION: 
-- Module METADATA
local componentName = "undercut_wars_dashboard"
local componentExternalName = "Undercut Wars Dashboard"
local componentVersion = "0.0.1"
local componentType = "module"
-- Função para registrar os metadados globalmente
if not _G[componentName .. "_Metadata"] then
    _G[componentName .. "_Metadata"] = {
        componentExternalName = componentExternalName,
        componentVersion = componentVersion,
        componentType = componentType
    }
else
    DEFAULT_CHAT_FRAME:AddMessage("|cFFFF0000[WARNING]: Metadados do componente '" .. componentExternalName .. "' já estavam registrados. Substituição não necessária.|r")
end
--
-- END OF DEFAULT HEADER, dont DELETE THE CODE ABOVE!
-- START HERE THIS COMPONENT SPECIFIC DEVELOPMENT, don't delete the code above.

=== End of C:\Program Files (x86)\World of Warcraft\_retail_\Interface\AddOns\AuctionHouseProTools\modules\undercut_wars_dashboard\undercut_wars_dashboard_init.lua ===

=== File: C:\Program Files (x86)\World of Warcraft\_retail_\Interface\AddOns\AuctionHouseProTools\snippets\hello_world.lua ===

-- DEFAULT HEADER, dont DELETE!
-- FILE PATH: snippets/hello_world.lua
-- SNIPPET SHORT DESCRIPTION: 
-- SNIPPET METADATA
local componentName = "hello_world"
local componentExternalName = "Hello World"
local componentVersion = "0.0.1"
local componentType = "snippet"

-- Registro dos metadados deste componente globalmente em addonComponents
_G["addonComponents"] = _G["addonComponents"] or {}

if not _G["addonComponents"][componentName] then
    _G["addonComponents"][componentName] = {
        Metadata = {
            componentName = componentName,
            componentExternalName = componentExternalName,
            componentVersion = componentVersion,
            componentType = componentType
        },
        functions = {}
    }
else
    DEFAULT_CHAT_FRAME:AddMessage("|cFFFF0000[WARNING]: Metadados do componente '" .. componentExternalName .. "' já estavam registrados. Substituição não necessária.|r")
end
--
-- END OF DEFAULT HEADER, dont DELETE THE CODE ABOVE!
-- START HERE THIS COMPONENT SPECIFIC DEVELOPMENT, don't delete the code above.
-- Função Hello World com cores do arco-íris
local function hello_world(componentExternalName, componentVersion)
    local rainbowColors = {
        "|cFFFF0000", -- Vermelho
        "|cFFFF7F00", -- Laranja
        "|cFFFFFF00", -- Amarelo
        "|cFF00FF00", -- Verde
        "|cFF0000FF", -- Azul
        "|cFF4B0082", -- Índigo
        "|cFF8B00FF"  -- Violeta
    }

    local helloWorldText = "Hello World"
    local coloredMessage = ""

    for i = 1, #helloWorldText do
        local colorIndex = (i - 1) % #rainbowColors + 1
        coloredMessage = coloredMessage .. rainbowColors[colorIndex] .. helloWorldText:sub(i, i)
    end

    coloredMessage = coloredMessage .. "|r - from " .. componentExternalName .. " version: " .. componentVersion
    DEFAULT_CHAT_FRAME:AddMessage(coloredMessage)
end

-- Registrar a função no namespace do snippet
_G["addonComponents"][componentName].functions["hello_world"] = hello_world

=== End of C:\Program Files (x86)\World of Warcraft\_retail_\Interface\AddOns\AuctionHouseProTools\snippets\hello_world.lua ===

=== File: C:\Program Files (x86)\World of Warcraft\_retail_\Interface\AddOns\AuctionHouseProTools\snippets\log.lua ===

-- DEFAULT HEADER, dont DELETE!
-- FILE PATH: snippets/log.lua
-- SNIPPET SHORT DESCRIPTION: Centralized logging system for AuctionHouseProTools
-- SNIPPET METADATA
local componentName = "Log"
local componentExternalName = "Log"
local componentVersion = "0.0.1"
local componentType = "snippet"

-- Registro dos metadados deste componente globalmente em addonComponents
_G["addonComponents"] = _G["addonComponents"] or {}

if not _G["addonComponents"][componentName] then
    _G["addonComponents"][componentName] = {
        Metadata = {
            componentName = componentName,
            componentExternalName = componentExternalName,
            componentVersion = componentVersion,
            componentType = componentType
        },
        functions = {}
    }
else
    DEFAULT_CHAT_FRAME:AddMessage("|cFFFF0000[WARNING]: Metadados do componente '" .. componentExternalName .. "' já estavam registrados. Substituição não necessária.|r")
end
--
-- END OF DEFAULT HEADER, dont DELETE THE CODE ABOVE!
-- START HERE THIS COMPONENT SPECIFIC DEVELOPMENT, don't delete the code above.

-- Função de log centralizada
local function Message(componentExternalName, level, message)
    -- Verifique se todos os parâmetros necessários estão presentes
    if not componentExternalName or not level or not message then
        DEFAULT_CHAT_FRAME:AddMessage("|cFFFF0000[ERROR]: Parâmetros ausentes na função de log: componentExternalName, level ou message.|r")
        return
    end

    -- Inicialmente defina a cor como nil
    local color = nil

    -- Definir a cor com base no nível
    if level == "ERROR" then
        color = "|cFFFF0000" -- Vermelho
    elseif level == "INFO" then
        color = "|cFFFFFFFF" -- Branco
    elseif level == "DEBUG" then
        -- FUTURO: Verificar se o DEBUG está ativado para o componente solicitante
        -- Placeholder: Checagem de debug ainda não implementada.
        color = "|cFF00FFFF" -- Azul Ciano (DEBUG)
    end

    -- Se a cor ainda não foi atribuída, defina uma cor padrão
    if not color or color == "" then
        color = "|cFFCCCCCC" -- Cinza Claro (cor padrão se não houver uma cor definida)
        DEFAULT_CHAT_FRAME:AddMessage("|cFFFF0000[WARNING]: Nível de log desconhecido '" .. tostring(level) .. "'. Usando cor padrão.|r")
    end

    -- Formatar a mensagem de log (concatenação direta de color e componentExternalName para garantir formato correto)
    local formattedMessage = string.format("%s - %s%s [%s]: %s|r", _G["addonExternalName"], color, componentExternalName, level, message, color, componentExternalName, level, message)
    
    -- Exibir a mensagem no chat
    DEFAULT_CHAT_FRAME:AddMessage(formattedMessage)
end

-- Tornar a função de log disponível no namespace do componente
_G["addonComponents"][componentName].functions["message"] = Message

--_G["addonExternalName"] = "Auction House Pro Tools"
=== End of C:\Program Files (x86)\World of Warcraft\_retail_\Interface\AddOns\AuctionHouseProTools\snippets\log.lua ===

